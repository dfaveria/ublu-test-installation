---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  labels:
    component: prometheus-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi # please keep in sync with the startup param 'storage.tsdb.retention.size'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus
rules: # copied from https://github.com/kubernetes/kube-state-metrics/blob/master/kubernetes/kube-state-metrics-cluster-role.yaml
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - namespaces
  - endpoints
  verbs: ["list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs: ["list", "watch"]
- apiGroups: ["apps"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  labels:
    component: prometheus-server
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    component: prometheus-server
  annotations:
    prometheus.io/federate: "true"
spec:
  ports:
    - name: http
      port: 80
      targetPort: 9090
  selector:
    app: prometheus
    component: prometheus-server
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  labels:
    component: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      component: prometheus-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: prometheus-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus-server
          image: prom/prometheus
          imagePullPolicy: Always
          args:
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/prometheus/ 
            - --storage.tsdb.retention.size=5GB # please keep in sync with the volume size
            - --storage.tsdb.wal-compression
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles 
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
            limits:
              cpu: 1000m
              memory: 1500Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /prometheus/
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server-config
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-data
