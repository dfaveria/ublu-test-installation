apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  labels:
    component: kafka
data:
  kafka.properties: |-
    com.unblu.kafka.server.zookeeperHosts=zookeeper:2181
    com.unblu.kafka.server.defaultReplicationFactor=2
    com.unblu.platform.server.core.internal.GracefulShutdownManager.gracefulShutdownTimeoutSeconds=60
    com.unblu.logging.consoleUseJsonLogFormat=true
    com.unblu.kafka.server.requesttimeoutmsconfig=500
    # systempath needs to be available for prometheus metrics servlet
    com.unblu.systempath.enabled=true
    com.unblu.metrics.applicationTag=unblu-kafka-server
---
kind: Service
apiVersion: v1
metadata:
  name: kafka
  labels:
    component: kafka
spec:
  ports:
  - name: 9092-tcp
    port: 9092
  selector:
    component: kafka
  type: ClusterIP
---
kind: Service
apiVersion: v1
metadata:
  labels:
    component: kafka
  name: kafka-hs
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
  - name: 9092-tcp
    port: 9092
  selector:
    component: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      component: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    component: kafka
  name: kafka
spec:
  replicas: 3
  podManagementPolicy: Parallel
  serviceName: kafka-hs
  selector:
    matchLabels:
      component: kafka
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: kafka
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7080"
        prometheus.io/path: "/sys-unblu/prometheus"
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: kafka
        args:
        - kafka
        image: gcr.io/unblu-containerrepo-public/collaborationserver-centos7
        imagePullPolicy: Always
        ports:
        - containerPort: 9092
        - name: jetty-server
          containerPort: 7080
        readinessProbe:
          httpGet:
            path: /sys-unblu/readiness
            port: jetty-server
          initialDelaySeconds: 60
          timeoutSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 7080
          initialDelaySeconds: 90
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
          - name: KAFKA_JAVA_PARAMS
            value: "-Xms512m -Xmx700m"
        volumeMounts:
        - mountPath: /etc/unblu
          name: kafka-config
          readOnly: true
      initContainers:
      - name: wait-for-zookeeper
        image: gcr.io/unblu-containerrepo-public/collaborationserver-centos7
        imagePullPolicy: Always
        command:
        - sh
        - -c
        - |
          until [[ \
          `echo "ruok" | nc -w 2 zookeeper-0.zookeeper-hs 2181 2>/dev/null` == "imok" || \
          `echo "ruok" | nc -w 2 zookeeper-1.zookeeper-hs 2181 2>/dev/null` == "imok" || \
          `echo "ruok" | nc -w 2 zookeeper-2.zookeeper-hs 2181 2>/dev/null` == "imok" \
          ]]; do printf "."; sleep 1; done; echo "at least one zookeeper ready"
      volumes:
      - configMap:
          defaultMode: 288
          name: kafka-config
        name: kafka-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: kafka
  volumeClaimTemplates: [] # fix for https://github.com/kubernetes-sigs/kustomize/issues/504