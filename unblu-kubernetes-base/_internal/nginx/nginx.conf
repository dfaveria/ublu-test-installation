# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
worker_processes auto;
error_log /dev/stdout info;
pid /run/nginx.pid;
# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
events {
    worker_connections  1024;
}
http {
    client_max_body_size 200m;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;
    proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=my_cache:10m max_size=1g
                inactive=600m use_temp_path=off;
    include             /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server {
        listen 8080 default_server;
        server_name _;
        # To enable HSTS on all subdomains associated with the parent domain apply the header below instead:
        # Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Strict-Transport-Security "max-age=31536000" always;
        server_tokens off; # hide nginx version
        root        /usr/share/nginx/html;
        location /stub_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        location /nginx-health {
          return 200 "healthy (static entry in nginx.conf)";
          add_header Content-Type text/plain;
        }
        location ~* /(sys-unblu) {
            deny all;
            # 403 forbidden http statuscode
            return 403;
        }

        proxy_read_timeout 300s;
        location / {
            if ($http_x_forwarded_proto = "http") {
                return 301 https://$host$request_uri;
            }
            proxy_set_header Host $host;
            proxy_pass http://haproxy:8080;
            proxy_pass_request_headers on;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-Forwarded-Proto "https";
        }
        # maches any location that resembles /$origin/static/...
        # where $origin may be any character except the forward slash '/'
        location ~* ^\/[^\/]*\/static\/.*$ {
            # do not send "Accept-Encoding" to upstream servers and add gzip compression to all static assets here
            proxy_hide_header "Accept-Encoding";
            gzip on;
            gzip_proxied any;
            gzip_comp_level 6;
            gzip_types *;
            gzip_vary on;
            proxy_cache my_cache;
            ## do cache responses without a valid caching instruction
            proxy_cache_valid 200 30m;
            proxy_cache_lock on;
            proxy_pass http://haproxy:8080;
            proxy_force_ranges on;
        }

        include hooks/*.conf;
    }
}
